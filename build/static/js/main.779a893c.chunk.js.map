{"version":3,"sources":["images/cryptocurrency.png","components/Navbar/Navbar.jsx","services/cryptoApi.js","components/Homepage/Cryptostats.jsx","components/Homepage/Homepage.jsx","components/Spinner.js","components/Crypto/CryptoCurrencies.jsx","services/exhangesApi.js","components/Crypto/Exchanges.jsx","components/Crypto/LineChart.jsx","components/Crypto/CoinStatistics.jsx","components/Crypto/OtherStatistics.jsx","components/Crypto/CoinDescLink.jsx","services/cryptoDetailsApi.js","components/Crypto/CryptoDetails.jsx","services/cryptoNewsApi.js","components/News/News.jsx","App.js","app/store.js","index.js"],"names":["Navbar","useState","activeMenu","setActiveMenu","undefined","screenSize","setScreenSize","useEffect","handleResize","window","innerWidth","addEventListener","removeEventListener","isMobile","className","src","icon","size","Title","level","to","onClick","MenuOutlined","theme","Item","HomeOutlined","FundOutlined","MoneyCollectOutlined","BulbOutlined","cryptoApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","endpoints","builder","getCryptos","query","limit","url","useGetCryptosQuery","Cryptostats","data","isFetching","globalStats","stats","span","title","value","total","millify","totalExchanges","totalMarketCap","total24hVolume","totalMarkets","Typography","Homepage","simplified","SpinnerOverlay","styled","div","SpinnerContainer","Spinner","CryptoCurrencies","coins","cryptos","setCryptos","searchTerm","setSearchTerm","filteredData","filter","coin","name","toLowerCase","includes","placeholder","onChange","e","target","gutter","map","currency","xs","sm","lg","id","rank","extra","iconUrl","alt","hoverable","price","marketCap","change","exchangesApi","getExchanges","useGetExchangesQuery","Text","Panel","Collapse","Exchanges","exchanges","exchange","showArrow","header","volume","numberOfMarkets","marketShare","HTMLReactParser","description","LineChart","coinName","coinHistory","currentPrice","coinPrice","coinTimeStamp","i","history","length","push","Date","timestamp","toLocaleDateString","labels","datasets","label","fill","backgroundColor","borderColor","options","scales","yAxes","ticks","beginAtZero","CoinStatistics","cryptoDetails","DollarCircleOutlined","NumberOutlined","ThunderboltOutlined","allTimeHigh","TrophyOutlined","OtherStatistics","genericStats","numberOfExchanges","approvedSupply","CheckOutlined","StopOutlined","ExclamationCircleOutlined","totalSupply","circulatingSupply","CoinDescLink","links","link","type","href","rel","cryptoApiHeaders","createRequest","headers","cryptoDetailsApi","getCryptoDetails","coinId","getCryptoHistory","timePeriod","useGetCryptoDetailsQuery","useGetCryptoHistoryQuery","Option","Select","CryptoDetails","useParams","setTimePeriod","slug","defaultValue","date","currencPrice","cryptoNewsApi","getCryptoNews","count","useGetCryptoNewsQuery","demoImage","News","news","style","maxWidth","maxHeight","image","thumbnail","contentUrl","substring","provider","moment","datePublished","startOf","fromNow","App","exact","path","color","textAlign","configureStore","reducer","ReactDOM","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.779a893c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/cryptocurrency.1548aced.png\";","import React, { useState, useEffect } from 'react';\nimport { Button, Menu, Typography, Avatar } from 'antd';\nimport { Link } from 'react-router-dom';\n\nimport {\n  HomeOutlined,\n  MoneyCollectOutlined,\n  BulbOutlined,\n  FundOutlined,\n  MenuOutlined,\n} from '@ant-design/icons';\n\nimport icon from '../../images/cryptocurrency.png';\n\nconst Navbar = () => {\n  const [activeMenu, setActiveMenu] = useState(true);\n  const [screenSize, setScreenSize] = useState(undefined);\n\n  useEffect(() => {\n    const handleResize = () => setScreenSize(window.innerWidth);\n\n    window.addEventListener('resize', handleResize);\n\n    handleResize();\n\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  useEffect(() => {\n    if (screenSize <= 800) {\n      setActiveMenu(false);\n    } else {\n      setActiveMenu(true);\n    }\n  }, [screenSize]);\n  const isMobile = screenSize <= 800;\n\n  return (\n    <div className='nav-container'>\n      <div className='logo-container'>\n        <Avatar src={icon} size='large' />\n        <Typography.Title level={2} className='logo'>\n          <Link to='/'>Cryptoverse</Link>\n        </Typography.Title>\n        <Button\n          className='menu-control-container'\n          onClick={() => setActiveMenu(!activeMenu)}\n        >\n          <MenuOutlined />\n        </Button>\n      </div>\n      {activeMenu && (\n        <Menu\n          onClick={() => (isMobile ? setActiveMenu(false) : null)}\n          theme='dark'\n        >\n          <Menu.Item icon={<HomeOutlined />}>\n            <Link to='/'>Home</Link>\n          </Menu.Item>\n          <Menu.Item icon={<FundOutlined />}>\n            <Link to='/cryptocurrencies'>Cryptocurrencies</Link>\n          </Menu.Item>\n          <Menu.Item icon={<MoneyCollectOutlined />}>\n            <Link to='/exchanges'>Exchanges</Link>\n          </Menu.Item>\n          <Menu.Item icon={<BulbOutlined />}>\n            <Link to='/news'>News</Link>\n          </Menu.Item>\n        </Menu>\n      )}\n    </div>\n  );\n};\n\nexport default Navbar;\n","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\n\nconst baseUrl = 'http://localhost:5000/api/coins';\n\nconst createRequest = url => ({ url });\n\nexport const cryptoApi = createApi({\n  reducerPath: 'cryptoApi',\n  baseQuery: fetchBaseQuery({\n    baseUrl,\n  }),\n  endpoints: builder => ({\n    getCryptos: builder.query({\n      query: limit => createRequest(`?limit=${limit}`),\n    }),\n  }),\n});\n\nexport const { useGetCryptosQuery } = cryptoApi;\n","import React from 'react';\nimport millify from 'millify';\nimport { Row, Col, Statistic } from 'antd';\nimport { useGetCryptosQuery } from '../../services/cryptoApi';\n\nconst Cryptostats = () => {\n  const { data, isFetching } = useGetCryptosQuery(10);\n\n  if (isFetching) return 'Loading...';\n\n  const globalStats = data?.data?.stats;\n\n  return (\n    <Row>\n      <Col span={12}>\n        <Statistic title={'Total Cryptocurrencies'} value={globalStats.total} />\n      </Col>\n      <Col span={12}>\n        <Statistic\n          title={'Total Exchanges'}\n          value={millify(globalStats.totalExchanges)}\n        />\n      </Col>\n      <Col span={12}>\n        <Statistic\n          title={'Total Market Cap'}\n          value={millify(globalStats.totalMarketCap)}\n        />\n      </Col>\n      <Col span={12}>\n        <Statistic\n          title={'Total 24h Volume'}\n          value={millify(globalStats.total24hVolume)}\n        />\n      </Col>\n      <Col span={12}>\n        <Statistic\n          title={'Total Markets'}\n          value={millify(globalStats.totalMarkets)}\n        />\n      </Col>\n    </Row>\n  );\n};\n\nexport default Cryptostats;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Typography } from 'antd';\n\nimport Cryptostats from './Cryptostats';\nimport { CryptoCurrencies, News } from '../../components';\n\nconst { Title } = Typography;\n\nconst Homepage = () => {\n  return (\n    <>\n      <Title level={2} className='heading'>\n        Global Crypto Stats\n      </Title>\n      <Cryptostats />\n      <div className='home-heading-container'>\n        <Title level={2} className='home-title'>\n          Top 10 Cryptocurrencies in the world\n        </Title>\n        <Title level={2} className='show-more'>\n          <Link to='/cryptocurrencies'>Show more</Link>\n        </Title>\n      </div>\n      <CryptoCurrencies simplified />\n      <div className='home-heading-container'>\n        <Title level={2} className='home-title'>\n          Latest Crypto News\n        </Title>\n        <Title level={2} className='show-more'>\n          <Link to='/news'>Show more</Link>\n        </Title>\n      </div>\n      <News simplified />\n    </>\n  );\n};\n\nexport default Homepage;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Spinner = () => (\n  <SpinnerOverlay>\n    <SpinnerContainer />\n  </SpinnerOverlay>\n);\n\nconst SpinnerOverlay = styled.div`\n  height: 100vh;\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst SpinnerContainer = styled.div`\n  display: inline-block;\n  width: 50px;\n  height: 50px;\n  border: 3px solid rgba(195, 195, 195, 0.6);\n  border-radius: 50%;\n  border-top-color: #636767;\n  animation: spin 1s ease-in-out infinite;\n  -webkit-animation: spin 1s ease-in-out infinite;\n  @keyframes spin {\n    to {\n      -webkit-transform: rotate(360deg);\n    }\n  }\n  @-webkit-keyframes spin {\n    to {\n      -webkit-transform: rotate(360deg);\n    }\n  }\n`;\n\nexport default Spinner;\n","import React, { useState, useEffect } from 'react';\nimport millify from 'millify';\nimport { Link } from 'react-router-dom';\nimport { Card, Row, Col, Input } from 'antd';\nimport { useGetCryptosQuery } from '../../services/cryptoApi';\nimport Spinner from '../Spinner';\n\nconst CryptoCurrencies = ({ simplified }) => {\n  const limit = simplified ? 10 : 100;\n\n  const { data, isFetching } = useGetCryptosQuery(limit);\n  const [cryptos, setCryptos] = useState(data?.data?.coins);\n  const [searchTerm, setSearchTerm] = useState('');\n\n  useEffect(() => {\n    setCryptos(data?.data?.coins);\n    const filteredData = data?.data?.coins.filter(coin =>\n      coin.name.toLowerCase().includes(searchTerm.toLowerCase()),\n    );\n    setCryptos(filteredData);\n  }, [data, searchTerm]);\n\n  if (isFetching) return <Spinner />;\n\n  return (\n    <>\n      {!simplified && (\n        <div className='search-crypto'>\n          <Input\n            placeholder='Search crypto currency'\n            onChange={e => setSearchTerm(e.target.value)}\n          />\n        </div>\n      )}\n      <Row gutter={[32, 32]} className='crypto-card-container'>\n        {cryptos?.map(currency => (\n          <Col xs={24} sm={12} lg={6} className='crypto-card' key={currency.id}>\n            <Link to={`/crypto/${currency.id}`}>\n              <Card\n                title={`${currency.rank}. ${currency.name}`}\n                extra={\n                  <img\n                    className='crypto-image'\n                    src={currency.iconUrl}\n                    alt={`${currency.name}`}\n                  />\n                }\n                hoverable\n              >\n                <p>Price: ${millify(currency.price)}</p>\n                <p>Market Cap: ${millify(currency.marketCap)}</p>\n                <p>Daily Change: ${millify(currency.change)}%</p>\n              </Card>\n            </Link>\n          </Col>\n        ))}\n      </Row>\n    </>\n  );\n};\n\nexport default CryptoCurrencies;\n","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\n\nconst baseUrl = 'http://localhost:5000/api/exchanges';\n\nconst createRequest = url => ({ url });\n\nexport const exchangesApi = createApi({\n  reducerPath: 'exchangesApi',\n  baseQuery: fetchBaseQuery({\n    baseUrl,\n  }),\n  endpoints: builder => ({\n    getExchanges: builder.query({\n      query: () => createRequest(`/`),\n    }),\n  }),\n});\n\nexport const { useGetExchangesQuery } = exchangesApi;\n","import React from 'react';\nimport HTMLReactParser from 'html-react-parser';\nimport millify from 'millify';\nimport Spinner from '../Spinner';\nimport { Button, Menu, Collapse, Row, Col, Typography, Avatar } from 'antd';\nimport { useGetExchangesQuery } from '../../services/exhangesApi';\n\nconst { Text } = Typography;\nconst { Panel } = Collapse;\n\nconst Exchanges = () => {\n  const { data, isFetching } = useGetExchangesQuery();\n\n  if (isFetching) return <Spinner />;\n\n  return (\n    <>\n      <Row>\n        <Col span={6}>Exchanges</Col>\n        <Col span={6}>24h Trade Volume</Col>\n        <Col span={6}>Markets</Col>\n        <Col span={6}>Change</Col>\n      </Row>\n      <Row>\n        {data?.data?.exchanges.map(exchange => (\n          <Col span={24}>\n            <Collapse>\n              <Panel\n                key={exchange.id}\n                showArrow={false}\n                header={\n                  <Row key={exchange.id}>\n                    <Col span={6}>\n                      <Text>\n                        <strong>{exchange.rank}.</strong>\n                      </Text>\n                      <Avatar\n                        className='exchange-image'\n                        src={exchange.iconUrl}\n                      />\n                      <Text>\n                        <strong>{exchange.name}</strong>\n                      </Text>\n                    </Col>\n                    <Col span={6}>${millify(exchange.volume)}</Col>\n                    <Col span={6}>{millify(exchange.numberOfMarkets)}</Col>\n                    <Col span={6}>{millify(exchange.marketShare)}%</Col>\n                  </Row>\n                }\n              >\n                {HTMLReactParser(exchange.description || '')}\n              </Panel>\n            </Collapse>\n          </Col>\n        ))}\n      </Row>\n    </>\n  );\n};\n\nexport default Exchanges;\n","import React from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { Col, Row, Typography } from 'antd';\n\nconst { Title } = Typography;\n\nconst LineChart = ({ coinName, coinHistory, currentPrice }) => {\n  const coinPrice = [];\n  const coinTimeStamp = [];\n\n  for (let i = 0; i < coinHistory?.data?.history?.length; i++) {\n    coinPrice.push(coinHistory?.data?.history[i].price);\n  }\n\n  for (let i = 0; i < coinHistory?.data?.history?.length; i++) {\n    coinTimeStamp.push(\n      new Date(coinHistory?.data?.history[i].timestamp).toLocaleDateString(),\n    );\n  }\n\n  const data = {\n    labels: coinTimeStamp,\n    datasets: [\n      {\n        label: 'Price In USD',\n        data: coinPrice,\n        fill: false,\n        backgroundColor: '#0071bd',\n        borderColor: '#0071bd',\n      },\n    ],\n  };\n\n  const options = {\n    scales: {\n      yAxes: [\n        {\n          ticks: {\n            beginAtZero: true,\n          },\n        },\n      ],\n    },\n  };\n\n  return (\n    <>\n      <Row className='chart-header'>\n        <Title level={2} className='chart-title'>\n          {coinName} Price Chart\n        </Title>\n        <Col className='price-container'>\n          <Title level={5} className='price-change'>\n            {coinHistory?.data?.change} %\n          </Title>\n          <Title level={5} className='current-price'>\n            Current ${coinName} Price: $ ${currentPrice}\n          </Title>\n        </Col>\n      </Row>\n      <Line data={data} options={options} />\n    </>\n  );\n};\n\nexport default LineChart;\n","import React from 'react';\nimport { Col, Typography } from 'antd';\nimport millify from 'millify';\nimport {\n  DollarCircleOutlined,\n  TrophyOutlined,\n  NumberOutlined,\n  ThunderboltOutlined,\n} from '@ant-design/icons';\n\nconst { Title, Text } = Typography;\n\nconst CoinStatistics = ({ cryptoDetails }) => {\n  const stats = [\n    {\n      title: 'Price to USD',\n      value: `$ ${cryptoDetails.price && millify(cryptoDetails.price)}`,\n      icon: <DollarCircleOutlined />,\n    },\n    { title: 'Rank', value: cryptoDetails.rank, icon: <NumberOutlined /> },\n    {\n      title: '24h Volume',\n      value: `$ ${cryptoDetails.volume && millify(cryptoDetails.volume)}`,\n      icon: <ThunderboltOutlined />,\n    },\n    {\n      title: 'Market Cap',\n      value: `$ ${cryptoDetails.marketCap && millify(cryptoDetails.marketCap)}`,\n      icon: <DollarCircleOutlined />,\n    },\n    {\n      title: 'All-time-high(daily avg.)',\n      value: `$ ${millify(cryptoDetails.allTimeHigh.price)}`,\n      icon: <TrophyOutlined />,\n    },\n  ];\n  return (\n    <Col className='coin-value-statistics'>\n      <Col className='coin-value-statistics-heading'>\n        <Title level={3} className='coin-details-heading'>\n          {cryptoDetails.name} Value Statistics:\n        </Title>\n        <p>An overview showing the stats of {cryptoDetails.name}</p>\n      </Col>\n      {stats.map(({ icon, title, value }) => (\n        <Col className='coin-stats'>\n          <Col className='coin-stats-name'>\n            <Text>{icon}</Text>\n            <Text>{title}</Text>\n          </Col>\n          <Text className='stats'>{value}</Text>\n        </Col>\n      ))}\n    </Col>\n  );\n};\n\nexport default CoinStatistics;\n","import React from 'react';\nimport { Col, Typography } from 'antd';\nimport {\n  MoneyCollectOutlined,\n  FundOutlined,\n  ExclamationCircleOutlined,\n  StopOutlined,\n  CheckOutlined,\n} from '@ant-design/icons';\nimport millify from 'millify';\n\nconst { Text, Title } = Typography;\n\nconst OtherStatistics = ({ cryptoDetails }) => {\n  const genericStats = [\n    {\n      title: 'Number Of Markets',\n      value: cryptoDetails.numberOfMarkets,\n      icon: <FundOutlined />,\n    },\n    {\n      title: 'Number Of Exchanges',\n      value: cryptoDetails.numberOfExchanges,\n      icon: <MoneyCollectOutlined />,\n    },\n    {\n      title: 'Aprroved Supply',\n      value: cryptoDetails.approvedSupply ? (\n        <CheckOutlined />\n      ) : (\n        <StopOutlined />\n      ),\n      icon: <ExclamationCircleOutlined />,\n    },\n    {\n      title: 'Total Supply',\n      value: `$ ${millify(cryptoDetails.totalSupply)}`,\n      icon: <ExclamationCircleOutlined />,\n    },\n    {\n      title: 'Circulating Supply',\n      value: `$ ${millify(cryptoDetails.circulatingSupply)}`,\n      icon: <ExclamationCircleOutlined />,\n    },\n  ];\n  return (\n    <Col className='other-stats-info'>\n      <Col className='coin-value-statistics-heading'>\n        <Title level={3} className='coin-details-heading'>\n          Other Statistics:\n        </Title>\n        <p>An overview showing the stats of all cryptocurrencies</p>\n      </Col>\n      {genericStats.map(({ icon, title, value }) => (\n        <Col className='coin-stats'>\n          <Col className='coin-stats-name'>\n            <Text>{icon}</Text>\n            <Text>{title}</Text>\n          </Col>\n          <Text className='stats'>{value}</Text>\n        </Col>\n      ))}\n    </Col>\n  );\n};\n\nexport default OtherStatistics;\n","import React from 'react';\nimport HTMLReactParser from 'html-react-parser';\nimport { Col, Row, Typography } from 'antd';\n\nconst { Title } = Typography;\n\nconst CoinDescLink = ({ cryptoDetails }) => {\n  return (\n    <Col className='coin-desc-link'>\n      <Row className='coin-desc'>\n        <Title level={3} className='coin-details-heading'>\n          What is {cryptoDetails.name}?\n          {HTMLReactParser(cryptoDetails.description)}\n        </Title>\n      </Row>\n      <Col className='coin-links'>\n        <Title level={3} className='coin-details-heading'>\n          {cryptoDetails.name} Links\n        </Title>\n        {cryptoDetails.links.map(link => (\n          <Row className='coin-link' key={link.name}>\n            <Title level={5} className='link-name'>\n              {link.type}\n            </Title>\n            <a href={link.url} target='_blank' rel='noreffer'>\n              {link.name}\n            </a>\n          </Row>\n        ))}\n      </Col>\n    </Col>\n  );\n};\n\nexport default CoinDescLink;\n","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\n\nconst cryptoApiHeaders = {\n  'x-rapidapi-host': 'coinranking1.p.rapidapi.com',\n  'x-rapidapi-key': '103c4f49b6msh4e19359526c2f79p1ceb74jsn59cc64fc64a8',\n};\n\nconst baseUrl = 'https://coinranking1.p.rapidapi.com/';\n\nconst createRequest = url => ({ url, headers: cryptoApiHeaders });\n\nexport const cryptoDetailsApi = createApi({\n  reducerPath: 'cryptoDetailsApi',\n  baseQuery: fetchBaseQuery({\n    baseUrl,\n  }),\n  endpoints: builder => ({\n    getCryptoDetails: builder.query({\n      query: coinId => createRequest(`/coin/${coinId}`),\n    }),\n    getCryptoHistory: builder.query({\n      query: ({ coinId, timePeriod }) =>\n        createRequest(`/coin/${coinId}/history/${timePeriod}`),\n    }),\n  }),\n});\n\nexport const { useGetCryptoDetailsQuery, useGetCryptoHistoryQuery } =\n  cryptoDetailsApi;\n","import React, { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Col, Typography, Select } from 'antd';\nimport millify from 'millify';\n\nimport LineChart from './LineChart';\nimport Spinner from '../Spinner';\nimport CoinStatistics from './CoinStatistics';\nimport OtherStatistics from './OtherStatistics';\nimport CoinDescLink from './CoinDescLink';\nimport {\n  useGetCryptoDetailsQuery,\n  useGetCryptoHistoryQuery,\n} from '../../services/cryptoDetailsApi';\n\nconst { Title } = Typography;\nconst { Option } = Select;\n\nconst CryptoDetails = () => {\n  const { coinId } = useParams();\n  const [timePeriod, setTimePeriod] = useState('7d');\n  const { data, isFetching } = useGetCryptoDetailsQuery(coinId);\n  const { data: coinHistory, isFetching: history } = useGetCryptoHistoryQuery({\n    coinId,\n    timePeriod,\n  });\n  const cryptoDetails = data?.data?.coin;\n\n  if (isFetching || history) return <Spinner />;\n\n  const time = ['3h', '24h', '7d', '30d', '1y', '3m', '3y', '5y'];\n\n  return (\n    <Col className='coin-detail-container'>\n      <Col className='coin-heading-container'>\n        <Title level={2} className='coin-name'>\n          {cryptoDetails.name} ({cryptoDetails.slug}) Price\n        </Title>\n        <p>\n          {cryptoDetails.name} live price in US dollars. View value statistics,\n          market cap and supply\n        </p>\n      </Col>\n      <Select\n        defaultValue='7d'\n        className='select-timeperiod'\n        placeholder='Select time period'\n        onChange={value => setTimePeriod(value)}\n      >\n        {time.map(date => (\n          <Option key={date}>{date}</Option>\n        ))}\n      </Select>\n      <LineChart\n        coinHistory={coinHistory}\n        currencPrice={millify(cryptoDetails.price)}\n        coinName={cryptoDetails.name}\n      />\n      <Col className='stats-container'>\n        <CoinStatistics cryptoDetails={cryptoDetails} />\n        <OtherStatistics cryptoDetails={cryptoDetails} />\n      </Col>\n      <CoinDescLink cryptoDetails={cryptoDetails} />\n    </Col>\n  );\n};\n\nexport default CryptoDetails;\n","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\n\nconst baseUrl = 'http://localhost:5000/api/news/search';\n\nconst createRequest = url => ({ url });\n\nexport const cryptoNewsApi = createApi({\n  reducerPath: 'cryptoNewsApi',\n  baseQuery: fetchBaseQuery({\n    baseUrl,\n  }),\n  endpoints: builder => ({\n    getCryptoNews: builder.query({\n      query: ({ count }) => createRequest(`?count=${count}`),\n    }),\n  }),\n});\n\nexport const { useGetCryptoNewsQuery } = cryptoNewsApi;\n","import React, { useState } from 'react';\nimport { Select, Typography, Row, Col, Avatar, Card } from 'antd';\nimport moment from 'moment';\n\nimport { useGetCryptoNewsQuery } from '../../services/cryptoNewsApi';\nimport { useGetCryptosQuery } from '../../services/cryptoApi';\nimport Spinner from '../Spinner';\n\nconst { Text, Title } = Typography;\nconst { Option } = Select;\n\nconst demoImage =\n  'http://coinrevolution.com/wp-content/uploads/2020/06/cryptonews.jpg';\n\nconst News = ({ simplified }) => {\n  const count = simplified ? 6 : 12;\n  const { data } = useGetCryptoNewsQuery({\n    count,\n  });\n\n  if (!data?.value) return <Spinner />;\n\n  return (\n    <Row gutter={[24, 24]}>\n      {data.value.map(news => (\n        <Col xs={24} sm={12} lg={8} key={news.id}>\n          <Card hoverable className='news-card'>\n            <a href={news.url} target='_blank' rel='noreferrer'>\n              <div className='news-image-container'>\n                <Title className='news-title' level={4}>\n                  {news.name}\n                </Title>\n                <img\n                  style={{ maxWidth: '200px', maxHeight: '100px' }}\n                  src={news?.image?.thumbnail?.contentUrl || demoImage}\n                  alt=''\n                />\n              </div>\n              <p>\n                {news.description.length > 100\n                  ? `${news.description.substring(0, 100)}...`\n                  : news.description}\n              </p>\n              <div className='provider-container'>\n                <div>\n                  <Avatar\n                    src={\n                      news.provider[0]?.image?.thumbnail?.contentUrl ||\n                      demoImage\n                    }\n                    alt=''\n                  />\n                  <Text className='provider-name'>\n                    {news.provider[0]?.name}\n                  </Text>\n                </div>\n                <Text>\n                  {moment(news.datePublished).startOf('ss').fromNow()}\n                </Text>\n              </div>\n            </a>\n          </Card>\n        </Col>\n      ))}\n    </Row>\n  );\n};\n\nexport default News;\n","import React from 'react';\nimport { Switch, Route, Link } from 'react-router-dom';\nimport { Layout, Typography, Space } from 'antd';\nimport './App.css';\n\nimport {\n  Navbar,\n  Homepage,\n  Exchanges,\n  CryptoCurrencies,\n  CryptoDetails,\n  News,\n} from './components';\n\nconst App = () => {\n  return (\n    <div className='app'>\n      <nav className='navbar'>\n        <Navbar />\n      </nav>\n      <main className='main'>\n        <Layout>\n          <div className='routes'>\n            <Switch>\n              <Route exact path='/'>\n                <Homepage />\n              </Route>\n              <Route exact path='/exchanges'>\n                <Exchanges />\n              </Route>\n              <Route exact path='/cryptocurrencies'>\n                <CryptoCurrencies />\n              </Route>\n              <Route exact path='/crypto/:coinId'>\n                <CryptoDetails />\n              </Route>\n              <Route exact path='/news'>\n                <News />\n              </Route>\n            </Switch>\n          </div>\n        </Layout>\n\n        <footer className='footer'>\n          <Typography.Title\n            level={5}\n            style={{ color: 'white', textAlign: 'center' }}\n          >\n            Cryptoverse\n            <br />\n            All rights reserved\n          </Typography.Title>\n          <Space>\n            <Link to='/'>Home</Link>\n            <Link to='/exchanges'>Exchanges</Link>\n            <Link to='/news'>News</Link>\n          </Space>\n        </footer>\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n","// The root of the apps state\nimport { configureStore } from '@reduxjs/toolkit';\n\nimport { cryptoApi } from '../services/cryptoApi';\nimport { cryptoDetailsApi } from '../services/cryptoDetailsApi';\nimport { cryptoNewsApi } from '../services/cryptoNewsApi';\nimport { exchangesApi } from '../services/exhangesApi';\n\nexport default configureStore({\n  reducer: {\n    [cryptoApi.reducerPath]: cryptoApi.reducer,\n    [cryptoNewsApi.reducerPath]: cryptoNewsApi.reducer,\n    [cryptoDetailsApi.reducerPath]: cryptoDetailsApi.reducer,\n    [exchangesApi.reducerPath]: exchangesApi.reducer,\n  },\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\n\nimport App from './App';\nimport 'antd/dist/antd.css';\nimport store from './app/store';\n\nReactDOM.render(\n  <BrowserRouter>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </BrowserRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}